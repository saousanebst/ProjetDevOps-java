# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven



on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Code coverage & scan SonarQube & packaging JAR
      run: >
        mvn
        org.jacoco:jacoco-maven-plugin:prepare-agent
        package
        verify
        org.jacoco:jacoco-maven-plugin:report
        sonar:sonar
        -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        -Dsonar.projectKey=groupe1
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Qualité SonarQube
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      with:
        scanMetadataReportFile: target/sonar/report-task.txt

      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: Partage du fichier Jar
      uses: actions/upload-artifact@v3
      with:
          name: appjar
          path: target/ci-groupe1.jar
  build:
    needs: test
    runs-on: ubuntu-latest
        
    steps:
    - name: Checkout du projet
      uses: actions/checkout@v4
              
    - name: Récupération du fichier JAR
      uses: actions/download-artifact@v3
      with:
        name: appjar
        path: target
        
    - name: Installation QEMU
      uses: docker/setup-qemu-action@v3
        
    - name: Installation Docker BuildX
      uses: docker/setup-buildx-action@v3
        
    - name: Connexion au Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN_GITHUB }}
        
    - name: Build de l'image & Push de l'image sur le Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: saousane/ajc-ci:Produit-java

